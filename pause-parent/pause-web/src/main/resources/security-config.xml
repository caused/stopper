<?xml version="1.0" encoding="UTF-8"?>

<beans:beans
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-4.2.xsd"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/security">

	<http auto-config="true">
		<intercept-url access="permitAll" pattern="/favicon.ico" />
		<intercept-url access="permitAll" pattern="/css/**" />
		<intercept-url access="permitAll" pattern="/fonts/**" />
		<intercept-url access="permitAll" pattern="/img/**" />
		<intercept-url access="permitAll" pattern="/js/**" />
		<intercept-url access="permitAll" pattern="/premium/**" />
		<intercept-url access="permitAll" pattern="/plugins/**" />
		<intercept-url access="permitAll" pattern="/login" />
		<intercept-url access="isAuthenticated()" pattern="/**" requires-channel="any"/>
		<!--Login customizado -->
		<form-login login-page="/login" password-parameter="senha" username-parameter="user" 
		authentication-success-handler-ref="myAuthenticationSuccessHandler"/>
		<!--Acesso não permitido page -->
		<!-- <access-denied-handler error-page="/Access_Denied" /> -->


		<csrf />
		<!-- <remember-me remember-me-parameter="remember-me" remember-me-cookie="remember-me"
        	token-validity-seconds="86400" data-source-ref="dataSource" /> -->
        	<!-- remember-me script
        	CREATE TABLE persistent_logins (
			    username VARCHAR(64) NOT NULL,
			    series VARCHAR(64) NOT NULL,
			    token VARCHAR(64) NOT NULL,
			    last_used TIMESTAMP NOT NULL,
			    PRIMARY KEY (series)
			); -->
			
	</http>
	
	<!--@PreAuthorize é adequado para verificar a autorização antes de entrar no método.
		@PostAuthorize , muitas vezes usado, verifica a autorização após o método ter sido executado, 
			por isso é adequado para verificar a autorização nos valores retornados. -->
	<global-method-security pre-post-annotations="enabled"/>
	
	<beans:bean
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"
		id="bcryptEncoder" />
		
		<beans:bean id="myAuthenticationSuccessHandler"
        class="br.com.verity.pause.MySimpleUrlAuthenticationSuccessHandler" />

	<beans:bean id="customUserDetailsBusiness"
		class="br.com.verity.pause.business.CustomUserDetailsBusiness" />
	<authentication-manager>
		<authentication-provider user-service-ref="customUserDetailsBusiness">
			<password-encoder ref="bcryptEncoder" />
		</authentication-provider>
		
	</authentication-manager>
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
</beans:beans>